addi1 imm 00 - -23456
	  01 - 305463004
	  10 - 1
	  11 - 0x2020

addi2 imm 00 - 32
	  01 - 1
	  10 - -1
	  11 - 20

r0 - 00
r1 - 01
r2 - 10
r3 - 11

addi1
r0 = $8
r1 = $9
r2 = $11
r3 = $19

addi2 
r0 = $15
r1 = $10
r2 = $17
r3 = $13

sw
r0 = $8
r1 = $10
r2 = $17
r3 = $19

sub =
r0 = $8
r1 = $0
r2 = $17

slt1
r0 = $0
r1 = $14
r2 = $17
r3 = $18

slt2
r0 = $0
r1 = $8

sll
r1 = $14
imm 00 = 1

bne 
imm 0000 = 2
0001 = -5
0011 = 5
0111 = -29

add
r0 = $8
r1 = $11
r2 = $17
r3 = $18

beq 
imm 0000 = 4

addi $8, $0, -23456		01000000 -> addi1 r0, -23456
lui $9, 0x1f2d			01000101 -> addi1 r1, 305463004
ori $9, $9, 0x3d4c	//	

# Part I (Start), uses $8, 10-13
addi $11, $11, 1	        01001010 -> addi1 r2, 1
addi $13, $13, 20		01011111 -> addi2 r3, 20
load_array:
sw $8, 0x2020($10)		01100001 -> sw, r0, r1

# Part II (Start), uses $9, 14-whatever
xor $14, $8, $9			10110001 -> xor, r0, r1			
addi $15, $15, 32               01010000 -> addi2, r0, 32
sub $17, $17, $17		11001010 -> sub r2, r2

count:
slt $16, $14, $0		10010100 -> slt1 r1, r0
bne $16, $0, skip		10000000 -> bne 2
addi $17, $17, 1		01011001 -> addi2 r2, 1

skip:
addi $15, $15, -1		01010010 -> addi2 r0, -1
sll $14, $14, 1			10100100 -> sll r1, 1
bne $15, $0, count		10000001 -> bne, -5
sw $17, 0x2080($10)		01101001 -> sw r2, r1

addi $19, $10, 0x2020		01001111 -> addi1 r3, 0x2020
slt $16, $17, $18		10011011 -> slt1 r2, r3
bne $16, $0, less		10000011 -> bne, 5
add $18, $0, $17		11011110 -> add r3, r2
# sw $8, 0x2000($0)		011000-- -> sw r0, --
# sw $17, 0x2004($0)		011010-- -> sw r2, --
# sw $19, 0x2008($0)		011011-- -> sw r3, --

# Part II (End)

less:
slt $12, $8, $0			11100100 -> slt2 r1, r0
beq $12, $0, cont		01110000 -> beq, 4
sub $8, $0, $8			11000100 -> sub r1, r0
add $8, $8, $11			11010001 -> add r0, r1
add $8, $8, $11			11010001 -> add r0, r1
sub $8, $0, $8			11000100 -> sub r1, r0

cont:
add $8, $8, $11			11010001 -> add r0, r1
addi $11, $11, 1		01001010 -> addi1 r2, 1
sub $8, $0, $8			11000100 -> sub r1, r0
addi $10, $10, 4		01010101 -> addi2 r1, 1 (repeat 4 times for +4 instead of +1)
addi $13, $13, -1		01011110 -> addi2 r3, -1
bne $13, $0, load_array		10000111 -> bne, -29

				11111111 -> halt